
ff010113 
00112623 
00812423 
01010413 
00100713 
06400693 
03200613 
01400593 
01400513 
00000097 
028080e7 
00100713 
06400693 
03200613 
12c00593 
0c800513 
00000097 
00c080e7 
fc9ff06f 
fc010113 
02112e23 
02812c23 
04010413 
fca42e23 
fcb42c23 
fcc42a23 
fcd42823 
00070793 
fcf407a3 
fff007b7 
fef42223 
fd842783 
fef42623 
0700006f 
fdc42783 
fef42423 
0440006f 
fec42703 
00070793 
00279793 
00e787b3 
00779793 
00078713 
fe842783 
00f707b3 
00078713 
fe442783 
00e787b3 
fcf44703 
00e78023 
fe842783 
00178793 
fef42423 
fdc42703 
fd442783 
00f707b3 
fe842703 
faf748e3 
fec42783 
00178793 
fef42623 
fd842703 
fd042783 
00f707b3 
fec42703
f8f742e3
00000013
00000013
03c12083
03812403
04010113
00008067


void fill_rect(int x0, int y0, int w, int h, unsigned char v);

int main() {

    
    while (true) {
        fill_rect(20, 20, 50, 100, 1);
        fill_rect(200, 300, 50, 100, 1);
    }
    
} 

void fill_rect(int x0, int y0, int w, int h, unsigned char v) {

	unsigned char* vram = (unsigned char*)(0xFFF00000);
	for (int y = y0; y < (y0 + h); y++) {
		for (int x = x0; x < (x0 + w); x++) {
			vram[y * 640 + x] = v;
		}
	}

}